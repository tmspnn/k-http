!function(I,g){"object"==typeof exports&&"object"==typeof module?module.exports=g():"function"==typeof define&&define.amd?define([],g):"object"==typeof exports?exports.kHttp=g():I.kHttp=g()}(this,function(){return function(I){var g={};function C(n){if(g[n])return g[n].exports;var l=g[n]={i:n,l:!1,exports:{}};return I[n].call(l.exports,l,l.exports,C),l.l=!0,l.exports}return C.m=I,C.c=g,C.d=function(I,g,n){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:n})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var n=Object.create(null);if(C.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var l in I)C.d(n,l,function(g){return I[g]}.bind(null,l));return n},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar k_util_1 = __webpack_require__(1);\nvar k_xhr_1 = __importDefault(__webpack_require__(2));\nexports.default = {\n    get: function (url, options) {\n        return this.getJSON(url, "get", options);\n    },\n    head: function (url, options) {\n        return new k_xhr_1.default(__assign({ url: url, method: "get" }, options));\n    },\n    post: function (url, data, options) {\n        if (data === void 0) { data = null; }\n        return this.send(url, "post", data, options);\n    },\n    put: function (url, data, options) {\n        if (data === void 0) { data = null; }\n        return this.send(url, "put", data, options);\n    },\n    patch: function (url, data, options) {\n        if (data === void 0) { data = null; }\n        return this.send(url, "patch", data, options);\n    },\n    del: function (url, options) {\n        return this.getJSON(url, "delete", options);\n    },\n    connect: function (url, options) {\n        return this.getJSON(url, "connect", options);\n    },\n    options: function (url, options) {\n        return this.getJSON(url, "options", options);\n    },\n    trace: function (url, options) {\n        return new k_xhr_1.default(__assign({ url: url, method: "delete" }, options));\n    },\n    getJSON: function (url, method, options) {\n        return new k_xhr_1.default(__assign({ url: url, method: method }, options)).then(function (resText) {\n            return k_util_1.parseJSON(resText) || resText;\n        });\n    },\n    send: function (url, method, data, options) {\n        var xhrOptions = __assign({ url: url,\n            method: method,\n            data: data, contentType: "application/x-www-form-urlencoded" }, options);\n        if (data) {\n            xhrOptions.contentType =\n                data.constructor == Document\n                    ? "text/html"\n                    : data.constructor == FormData\n                        ? "multipart/form-data"\n                        : data.constructor == ReadableStream\n                            ? "application/octet-stream"\n                            : "application/json";\n        }\n        if (xhrOptions.contentType == "application/json") {\n            xhrOptions.data = JSON.stringify(xhrOptions.data);\n        }\n        return new k_xhr_1.default(xhrOptions).then(function (resText) {\n            return k_util_1.parseJSON(resText) || resText;\n        });\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2tIdHRwLy4vc3JjL2staHR0cC50cz8yMjU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBrX3V0aWxfMSA9IHJlcXVpcmUoXCJrLXV0aWxcIik7XG52YXIga194aHJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiay14aHJcIikpO1xuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICAgIGdldDogZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRKU09OKHVybCwgXCJnZXRcIiwgb3B0aW9ucyk7XG4gICAgfSxcbiAgICBoZWFkOiBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcga194aHJfMS5kZWZhdWx0KF9fYXNzaWduKHsgdXJsOiB1cmwsIG1ldGhvZDogXCJnZXRcIiB9LCBvcHRpb25zKSk7XG4gICAgfSxcbiAgICBwb3N0OiBmdW5jdGlvbiAodXJsLCBkYXRhLCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChkYXRhID09PSB2b2lkIDApIHsgZGF0YSA9IG51bGw7IH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2VuZCh1cmwsIFwicG9zdFwiLCBkYXRhLCBvcHRpb25zKTtcbiAgICB9LFxuICAgIHB1dDogZnVuY3Rpb24gKHVybCwgZGF0YSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoZGF0YSA9PT0gdm9pZCAwKSB7IGRhdGEgPSBudWxsOyB9XG4gICAgICAgIHJldHVybiB0aGlzLnNlbmQodXJsLCBcInB1dFwiLCBkYXRhLCBvcHRpb25zKTtcbiAgICB9LFxuICAgIHBhdGNoOiBmdW5jdGlvbiAodXJsLCBkYXRhLCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChkYXRhID09PSB2b2lkIDApIHsgZGF0YSA9IG51bGw7IH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2VuZCh1cmwsIFwicGF0Y2hcIiwgZGF0YSwgb3B0aW9ucyk7XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0SlNPTih1cmwsIFwiZGVsZXRlXCIsIG9wdGlvbnMpO1xuICAgIH0sXG4gICAgY29ubmVjdDogZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRKU09OKHVybCwgXCJjb25uZWN0XCIsIG9wdGlvbnMpO1xuICAgIH0sXG4gICAgb3B0aW9uczogZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRKU09OKHVybCwgXCJvcHRpb25zXCIsIG9wdGlvbnMpO1xuICAgIH0sXG4gICAgdHJhY2U6IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBrX3hocl8xLmRlZmF1bHQoX19hc3NpZ24oeyB1cmw6IHVybCwgbWV0aG9kOiBcImRlbGV0ZVwiIH0sIG9wdGlvbnMpKTtcbiAgICB9LFxuICAgIGdldEpTT046IGZ1bmN0aW9uICh1cmwsIG1ldGhvZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IGtfeGhyXzEuZGVmYXVsdChfX2Fzc2lnbih7IHVybDogdXJsLCBtZXRob2Q6IG1ldGhvZCB9LCBvcHRpb25zKSkudGhlbihmdW5jdGlvbiAocmVzVGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuIGtfdXRpbF8xLnBhcnNlSlNPTihyZXNUZXh0KSB8fCByZXNUZXh0O1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIHNlbmQ6IGZ1bmN0aW9uICh1cmwsIG1ldGhvZCwgZGF0YSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgeGhyT3B0aW9ucyA9IF9fYXNzaWduKHsgdXJsOiB1cmwsXG4gICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiIH0sIG9wdGlvbnMpO1xuICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgeGhyT3B0aW9ucy5jb250ZW50VHlwZSA9XG4gICAgICAgICAgICAgICAgZGF0YS5jb25zdHJ1Y3RvciA9PSBEb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICA/IFwidGV4dC9odG1sXCJcbiAgICAgICAgICAgICAgICAgICAgOiBkYXRhLmNvbnN0cnVjdG9yID09IEZvcm1EYXRhXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGRhdGEuY29uc3RydWN0b3IgPT0gUmVhZGFibGVTdHJlYW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiYXBwbGljYXRpb24vanNvblwiO1xuICAgICAgICB9XG4gICAgICAgIGlmICh4aHJPcHRpb25zLmNvbnRlbnRUeXBlID09IFwiYXBwbGljYXRpb24vanNvblwiKSB7XG4gICAgICAgICAgICB4aHJPcHRpb25zLmRhdGEgPSBKU09OLnN0cmluZ2lmeSh4aHJPcHRpb25zLmRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcga194aHJfMS5kZWZhdWx0KHhock9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKHJlc1RleHQpIHtcbiAgICAgICAgICAgIHJldHVybiBrX3V0aWxfMS5wYXJzZUpTT04ocmVzVGV4dCkgfHwgcmVzVGV4dDtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){eval('!function(n,t){ true?module.exports=t():undefined}(this,function(){return function(n){var t={};function c(e){if(t[e])return t[e].exports;var g=t[e]={i:e,l:!1,exports:{}};return n[e].call(g.exports,g,g.exports,c),g.l=!0,g.exports}return c.m=n,c.c=t,c.d=function(n,t,e){c.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,t){if(1&t&&(n=c(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(c.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)c.d(e,g,function(t){return n[t]}.bind(null,g));return e},c.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(t,"a",t),t},c.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},c.p="",c(c.s=0)}([function(module,exports,__webpack_require__){"use strict";eval(\'\\nObject.defineProperty(exports, "__esModule", { value: true });\\nfunction isInt(v) {\\n    return typeof v == "number" && (v | 0) == v;\\n}\\nexports.isInt = isInt;\\nfunction isString(v) {\\n    return typeof v == "string";\\n}\\nexports.isString = isString;\\nfunction isFunction(v) {\\n    return typeof v == "function";\\n}\\nexports.isFunction = isFunction;\\nfunction isArray(v) {\\n    return v instanceof Array;\\n}\\nexports.isArray = isArray;\\nfunction isObject(v) {\\n    return v != null && typeof v == "object";\\n}\\nexports.isObject = isObject;\\nfunction isNaN(v) {\\n    return v != v;\\n}\\nexports.isNaN = isNaN;\\nfunction isNull(v) {\\n    return v == null;\\n}\\nexports.isNull = isNull;\\nfunction isJSON(v) {\\n    try {\\n        return typeof JSON.parse(v) == "object";\\n    }\\n    catch (e) {\\n        return false;\\n    }\\n}\\nexports.isJSON = isJSON;\\nfunction parseJSON(v) {\\n    try {\\n        return JSON.parse(v);\\n    }\\n    catch (e) {\\n        return null;\\n    }\\n}\\nexports.parseJSON = parseJSON;\\nexports.isBrowser = new Function("\\\\ntry {\\\\n  return this == window;\\\\n} catch (e) {\\\\n  return false;\\\\n}")();\\nfunction toArray(v) {\\n    return Array.prototype.slice.call(v);\\n}\\nexports.toArray = toArray;\\nfunction getPropByPath(o, path) {\\n    if (typeof o == "string" || o instanceof Object) {\\n        var paths = path.match(/[^\\\\.\\\\[\\\\]\\\\\\\'\\\\"]+/gi);\\n        if (paths) {\\n            paths[0] = o[paths[0]];\\n            return paths.reduce(function (result, key) {\\n                return result instanceof Object ? result[key] : null;\\n            });\\n        }\\n    }\\n    return null;\\n}\\nexports.getPropByPath = getPropByPath;\\nfunction last(a) {\\n    return a[a.length - 1];\\n}\\nexports.last = last;\\nfunction each(o, f) {\\n    if (o.length) {\\n        for (var i = 0, len = o.length; i < len; ++i) {\\n            f(o[i], i);\\n        }\\n    }\\n    else {\\n        for (var i in o) {\\n            if (o.hasOwnProperty(i)) {\\n                f(o[i], i);\\n            }\\n        }\\n    }\\n}\\nexports.each = each;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2tVdGlsLy4vay11dGlsLnRzPzRkZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBpc0ludCh2KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2ID09IFwibnVtYmVyXCIgJiYgKHYgfCAwKSA9PSB2O1xufVxuZXhwb3J0cy5pc0ludCA9IGlzSW50O1xuZnVuY3Rpb24gaXNTdHJpbmcodikge1xuICAgIHJldHVybiB0eXBlb2YgdiA9PSBcInN0cmluZ1wiO1xufVxuZXhwb3J0cy5pc1N0cmluZyA9IGlzU3RyaW5nO1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2ID09IFwiZnVuY3Rpb25cIjtcbn1cbmV4cG9ydHMuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG5mdW5jdGlvbiBpc0FycmF5KHYpIHtcbiAgICByZXR1cm4gdiBpbnN0YW5jZW9mIEFycmF5O1xufVxuZXhwb3J0cy5pc0FycmF5ID0gaXNBcnJheTtcbmZ1bmN0aW9uIGlzT2JqZWN0KHYpIHtcbiAgICByZXR1cm4gdiAhPSBudWxsICYmIHR5cGVvZiB2ID09IFwib2JqZWN0XCI7XG59XG5leHBvcnRzLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc05hTih2KSB7XG4gICAgcmV0dXJuIHYgIT0gdjtcbn1cbmV4cG9ydHMuaXNOYU4gPSBpc05hTjtcbmZ1bmN0aW9uIGlzTnVsbCh2KSB7XG4gICAgcmV0dXJuIHYgPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsID0gaXNOdWxsO1xuZnVuY3Rpb24gaXNKU09OKHYpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIEpTT04ucGFyc2UodikgPT0gXCJvYmplY3RcIjtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmV4cG9ydHMuaXNKU09OID0gaXNKU09OO1xuZnVuY3Rpb24gcGFyc2VKU09OKHYpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh2KTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuZXhwb3J0cy5wYXJzZUpTT04gPSBwYXJzZUpTT047XG5leHBvcnRzLmlzQnJvd3NlciA9IG5ldyBGdW5jdGlvbihcIlxcbnRyeSB7XFxuICByZXR1cm4gdGhpcyA9PSB3aW5kb3c7XFxufSBjYXRjaCAoZSkge1xcbiAgcmV0dXJuIGZhbHNlO1xcbn1cIikoKTtcbmZ1bmN0aW9uIHRvQXJyYXkodikge1xuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh2KTtcbn1cbmV4cG9ydHMudG9BcnJheSA9IHRvQXJyYXk7XG5mdW5jdGlvbiBnZXRQcm9wQnlQYXRoKG8sIHBhdGgpIHtcbiAgICBpZiAodHlwZW9mIG8gPT0gXCJzdHJpbmdcIiB8fCBvIGluc3RhbmNlb2YgT2JqZWN0KSB7XG4gICAgICAgIHZhciBwYXRocyA9IHBhdGgubWF0Y2goL1teXFwuXFxbXFxdXFwnXFxcIl0rL2dpKTtcbiAgICAgICAgaWYgKHBhdGhzKSB7XG4gICAgICAgICAgICBwYXRoc1swXSA9IG9bcGF0aHNbMF1dO1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAocmVzdWx0LCBrZXkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0IGluc3RhbmNlb2YgT2JqZWN0ID8gcmVzdWx0W2tleV0gOiBudWxsO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLmdldFByb3BCeVBhdGggPSBnZXRQcm9wQnlQYXRoO1xuZnVuY3Rpb24gbGFzdChhKSB7XG4gICAgcmV0dXJuIGFbYS5sZW5ndGggLSAxXTtcbn1cbmV4cG9ydHMubGFzdCA9IGxhc3Q7XG5mdW5jdGlvbiBlYWNoKG8sIGYpIHtcbiAgICBpZiAoby5sZW5ndGgpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IG8ubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIGYob1tpXSwgaSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAodmFyIGkgaW4gbykge1xuICAgICAgICAgICAgaWYgKG8uaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgICAgICAgICBmKG9baV0sIGkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5lYWNoID0gZWFjaDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\')}])});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){eval('!function(I,g){ true?module.exports=g():undefined}(this,function(){return function(I){var g={};function C(A){if(g[A])return g[A].exports;var n=g[A]={i:A,l:!1,exports:{}};return I[A].call(n.exports,n,n.exports,C),n.l=!0,n.exports}return C.m=I,C.c=g,C.d=function(I,g,A){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:A})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var n in I)C.d(A,n,function(g){return I[g]}.bind(null,n));return A},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=0)}([function(module,exports,__webpack_require__){"use strict";eval(\'\\nObject.defineProperty(exports, "__esModule", { value: true });\\nvar XhrPromise = /** @class */ (function () {\\n    function XhrPromise(options) {\\n        var _this = this;\\n        this.state = "pending";\\n        this.value = null;\\n        this.error = null;\\n        this.callbacks = [];\\n        this.finallyHandler = null;\\n        this.xhr = new XMLHttpRequest();\\n        this.onLoad = function () {\\n            var xhr = _this.xhr;\\n            if (xhr.status >= 200 && xhr.status < 400) {\\n                _this.state = "fulfilled";\\n                _this.value = xhr.responseText;\\n                _this.resolve();\\n            }\\n            else {\\n                _this.onError();\\n            }\\n        };\\n        this.onError = function () {\\n            var xhr = _this.xhr;\\n            _this.state = "rejected";\\n            _this.error = new Error(xhr.responseText || xhr.statusText);\\n            _this.reject();\\n        };\\n        this.resolve = function () {\\n            var _a;\\n            if (_this.value instanceof XhrPromise) {\\n                var p = _this.value;\\n                (_a = p.callbacks).push.apply(_a, _this.callbacks);\\n                p.finallyHandler = _this.finallyHandler;\\n                _this.callbacks.length = 0;\\n                _this.finallyHandler = null;\\n            }\\n            else if (_this.callbacks.length) {\\n                var cb = _this.callbacks.shift();\\n                if (cb.type == "resolve") {\\n                    try {\\n                        _this.value = cb.handler(_this.value);\\n                        _this.resolve();\\n                    }\\n                    catch (e) {\\n                        _this.state = "rejected";\\n                        _this.error = e;\\n                        _this.reject();\\n                    }\\n                }\\n                else {\\n                    _this.resolve();\\n                }\\n            }\\n            else if (_this.finallyHandler) {\\n                _this.finallyHandler(_this.xhr);\\n            }\\n        };\\n        this.reject = function () {\\n            if (_this.callbacks.length) {\\n                var cb = _this.callbacks.shift();\\n                if (cb.type == "reject") {\\n                    _this.value = cb.handler(_this.error);\\n                    _this.state = "fulfilled";\\n                    _this.resolve();\\n                }\\n                else {\\n                    _this.reject();\\n                }\\n            }\\n            else if (_this.finallyHandler) {\\n                _this.finallyHandler(_this.xhr);\\n            }\\n            else {\\n                throw _this.error;\\n            }\\n        };\\n        this.then = function (onResolve, onReject) {\\n            _this.callbacks.push({ type: "resolve", handler: onResolve });\\n            if (onReject)\\n                _this.callbacks.push({ type: "reject", handler: onReject });\\n            return _this;\\n        };\\n        this.catch = function (onReject) {\\n            _this.callbacks.push({ type: "reject", handler: onReject });\\n            return _this;\\n        };\\n        this.cancel = function () {\\n            _this.xhr.abort();\\n        };\\n        this.finally = function (onComplete) {\\n            _this.finallyHandler = onComplete;\\n            return _this;\\n        };\\n        var xhr = this.xhr;\\n        var url = options.url, method = options.method, async = options.async, contentType = options.contentType, headers = options.headers, withCredentials = options.withCredentials, data = options.data, beforeSend = options.beforeSend, onProgress = options.onProgress, timeout = options.timeout;\\n        xhr.open((method || "get").toUpperCase(), url, async != false);\\n        if (contentType)\\n            xhr.setRequestHeader("Content-Type", contentType);\\n        if (headers) {\\n            for (var h in headers) {\\n                if (headers.hasOwnProperty(h)) {\\n                    xhr.setRequestHeader(h, headers[h]);\\n                }\\n            }\\n        }\\n        xhr.withCredentials = withCredentials || false;\\n        xhr.timeout = timeout || 0;\\n        xhr.onload = this.onLoad;\\n        xhr.onerror = this.onError;\\n        if (xhr.upload && onProgress)\\n            xhr.upload.onprogress = onProgress;\\n        if (beforeSend)\\n            beforeSend(xhr);\\n        setTimeout(function () { return xhr.send(data); });\\n    }\\n    return XhrPromise;\\n}());\\nexports.default = XhrPromise;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0t4aHIvLi9rLXhoci50cz8yNTQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFhoclByb21pc2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gWGhyUHJvbWlzZShvcHRpb25zKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBcInBlbmRpbmdcIjtcbiAgICAgICAgdGhpcy52YWx1ZSA9IG51bGw7XG4gICAgICAgIHRoaXMuZXJyb3IgPSBudWxsO1xuICAgICAgICB0aGlzLmNhbGxiYWNrcyA9IFtdO1xuICAgICAgICB0aGlzLmZpbmFsbHlIYW5kbGVyID0gbnVsbDtcbiAgICAgICAgdGhpcy54aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgdGhpcy5vbkxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgeGhyID0gX3RoaXMueGhyO1xuICAgICAgICAgICAgaWYgKHhoci5zdGF0dXMgPj0gMjAwICYmIHhoci5zdGF0dXMgPCA0MDApIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zdGF0ZSA9IFwiZnVsZmlsbGVkXCI7XG4gICAgICAgICAgICAgICAgX3RoaXMudmFsdWUgPSB4aHIucmVzcG9uc2VUZXh0O1xuICAgICAgICAgICAgICAgIF90aGlzLnJlc29sdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF90aGlzLm9uRXJyb3IoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5vbkVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHhociA9IF90aGlzLnhocjtcbiAgICAgICAgICAgIF90aGlzLnN0YXRlID0gXCJyZWplY3RlZFwiO1xuICAgICAgICAgICAgX3RoaXMuZXJyb3IgPSBuZXcgRXJyb3IoeGhyLnJlc3BvbnNlVGV4dCB8fCB4aHIuc3RhdHVzVGV4dCk7XG4gICAgICAgICAgICBfdGhpcy5yZWplY3QoKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5yZXNvbHZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKF90aGlzLnZhbHVlIGluc3RhbmNlb2YgWGhyUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgIHZhciBwID0gX3RoaXMudmFsdWU7XG4gICAgICAgICAgICAgICAgKF9hID0gcC5jYWxsYmFja3MpLnB1c2guYXBwbHkoX2EsIF90aGlzLmNhbGxiYWNrcyk7XG4gICAgICAgICAgICAgICAgcC5maW5hbGx5SGFuZGxlciA9IF90aGlzLmZpbmFsbHlIYW5kbGVyO1xuICAgICAgICAgICAgICAgIF90aGlzLmNhbGxiYWNrcy5sZW5ndGggPSAwO1xuICAgICAgICAgICAgICAgIF90aGlzLmZpbmFsbHlIYW5kbGVyID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKF90aGlzLmNhbGxiYWNrcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2IgPSBfdGhpcy5jYWxsYmFja3Muc2hpZnQoKTtcbiAgICAgICAgICAgICAgICBpZiAoY2IudHlwZSA9PSBcInJlc29sdmVcIikge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMudmFsdWUgPSBjYi5oYW5kbGVyKF90aGlzLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc3RhdGUgPSBcInJlamVjdGVkXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5lcnJvciA9IGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5yZWplY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKF90aGlzLmZpbmFsbHlIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuZmluYWxseUhhbmRsZXIoX3RoaXMueGhyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5yZWplY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMuY2FsbGJhY2tzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHZhciBjYiA9IF90aGlzLmNhbGxiYWNrcy5zaGlmdCgpO1xuICAgICAgICAgICAgICAgIGlmIChjYi50eXBlID09IFwicmVqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMudmFsdWUgPSBjYi5oYW5kbGVyKF90aGlzLmVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc3RhdGUgPSBcImZ1bGZpbGxlZFwiO1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5yZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5yZWplY3QoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChfdGhpcy5maW5hbGx5SGFuZGxlcikge1xuICAgICAgICAgICAgICAgIF90aGlzLmZpbmFsbHlIYW5kbGVyKF90aGlzLnhocik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBfdGhpcy5lcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy50aGVuID0gZnVuY3Rpb24gKG9uUmVzb2x2ZSwgb25SZWplY3QpIHtcbiAgICAgICAgICAgIF90aGlzLmNhbGxiYWNrcy5wdXNoKHsgdHlwZTogXCJyZXNvbHZlXCIsIGhhbmRsZXI6IG9uUmVzb2x2ZSB9KTtcbiAgICAgICAgICAgIGlmIChvblJlamVjdClcbiAgICAgICAgICAgICAgICBfdGhpcy5jYWxsYmFja3MucHVzaCh7IHR5cGU6IFwicmVqZWN0XCIsIGhhbmRsZXI6IG9uUmVqZWN0IH0pO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNhdGNoID0gZnVuY3Rpb24gKG9uUmVqZWN0KSB7XG4gICAgICAgICAgICBfdGhpcy5jYWxsYmFja3MucHVzaCh7IHR5cGU6IFwicmVqZWN0XCIsIGhhbmRsZXI6IG9uUmVqZWN0IH0pO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLnhoci5hYm9ydCgpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmZpbmFsbHkgPSBmdW5jdGlvbiAob25Db21wbGV0ZSkge1xuICAgICAgICAgICAgX3RoaXMuZmluYWxseUhhbmRsZXIgPSBvbkNvbXBsZXRlO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgeGhyID0gdGhpcy54aHI7XG4gICAgICAgIHZhciB1cmwgPSBvcHRpb25zLnVybCwgbWV0aG9kID0gb3B0aW9ucy5tZXRob2QsIGFzeW5jID0gb3B0aW9ucy5hc3luYywgY29udGVudFR5cGUgPSBvcHRpb25zLmNvbnRlbnRUeXBlLCBoZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzLCB3aXRoQ3JlZGVudGlhbHMgPSBvcHRpb25zLndpdGhDcmVkZW50aWFscywgZGF0YSA9IG9wdGlvbnMuZGF0YSwgYmVmb3JlU2VuZCA9IG9wdGlvbnMuYmVmb3JlU2VuZCwgb25Qcm9ncmVzcyA9IG9wdGlvbnMub25Qcm9ncmVzcywgdGltZW91dCA9IG9wdGlvbnMudGltZW91dDtcbiAgICAgICAgeGhyLm9wZW4oKG1ldGhvZCB8fCBcImdldFwiKS50b1VwcGVyQ2FzZSgpLCB1cmwsIGFzeW5jICE9IGZhbHNlKTtcbiAgICAgICAgaWYgKGNvbnRlbnRUeXBlKVxuICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIiwgY29udGVudFR5cGUpO1xuICAgICAgICBpZiAoaGVhZGVycykge1xuICAgICAgICAgICAgZm9yICh2YXIgaCBpbiBoZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhlYWRlcnMuaGFzT3duUHJvcGVydHkoaCkpIHtcbiAgICAgICAgICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoaCwgaGVhZGVyc1toXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHhoci53aXRoQ3JlZGVudGlhbHMgPSB3aXRoQ3JlZGVudGlhbHMgfHwgZmFsc2U7XG4gICAgICAgIHhoci50aW1lb3V0ID0gdGltZW91dCB8fCAwO1xuICAgICAgICB4aHIub25sb2FkID0gdGhpcy5vbkxvYWQ7XG4gICAgICAgIHhoci5vbmVycm9yID0gdGhpcy5vbkVycm9yO1xuICAgICAgICBpZiAoeGhyLnVwbG9hZCAmJiBvblByb2dyZXNzKVxuICAgICAgICAgICAgeGhyLnVwbG9hZC5vbnByb2dyZXNzID0gb25Qcm9ncmVzcztcbiAgICAgICAgaWYgKGJlZm9yZVNlbmQpXG4gICAgICAgICAgICBiZWZvcmVTZW5kKHhocik7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyByZXR1cm4geGhyLnNlbmQoZGF0YSk7IH0pO1xuICAgIH1cbiAgICByZXR1cm4gWGhyUHJvbWlzZTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBYaHJQcm9taXNlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///0\\n\')}]).default});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')}]).default});